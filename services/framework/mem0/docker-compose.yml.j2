name: als-agents

services:
  {{framework.services.mem0.name}}:
    build:
      context: ./framework/mem0
      dockerfile: Dockerfile
      args:
        PORT: {{framework.services.mem0.port_container}}
    image: mcp/mem0 # Optional: specify image name
    pull_policy: missing
    container_name: {{framework.services.mem0.name}}
    ports:
      - "{{framework.services.mem0.port_host}}:{{framework.services.mem0.port_container}}"
    environment:
      - TRANSPORT={{framework.services.mem0.transport}}
      - HOST={{framework.services.mem0.host}}
      - PORT={{framework.services.mem0.port_container}}
      - MEM0_TELEMETRY={{framework.services.mem0.telemetry}}  # Disable Mem0 telemetry
      # Timezone synchronization with host (from system configuration)
      - TZ={{system.timezone}}
      - NO_PROXY=${NO_PROXY}
      # ollama
      - OLLAMA_PORT={{api.providers.ollama.port}}
      - OLLAMA_HOST={{api.providers.ollama.host}}
      # Vector store config - references qdrant service
      - QDRANT_HOST={{applications.als_expert.services.qdrant.name}}
      - QDRANT_PORT={{applications.als_expert.services.qdrant.port_container}}
      - VECTOR_STORE_COLLECTION={{framework.services.mem0.vector_store_collection}}
      # Embedder config
      - EMBEDDING_MODEL_DIMS={{framework.services.mem0.embedding_model_dims}}
      - EMBEDDER_MODEL={{framework.services.mem0.embedding_model}}
      - EMBEDDER_MODEL_PROVIDER={{framework.services.mem0.embedding_model_provider}}
      # LLM config
      - LLM_MODEL={{framework.services.mem0.llm_model}}
      - LLM_MODEL_PROVIDER={{framework.services.mem0.llm_model_provider}}
      - LLM_TEMPERATURE={{framework.services.mem0.llm_temperature}}
      - LLM_MAX_TOKENS={{framework.services.mem0.llm_max_tokens}}
    networks:
      - als-agents-network
